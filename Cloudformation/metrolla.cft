{
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "AMI": "ami-7f418316"
            },
            "us-west-1": {
                "AMI": "ami-951945d0"
            },
            "us-west-2": {
                "AMI": "ami-16fd7026"
            }
        }
    },
    "Parameters": {
        "DBAllocatedStorage": {
            "ConstraintDescription": "must be between 5 and 1024Gb.",
            "Default": "8",
            "Description": "The size of the database (Gb)",
            "MaxValue": "1024",
            "MinValue": "5",
            "Type": "Number"
        },
        "DBClass": {
            "AllowedValues": [
                "db.t2.small",
                "db.t2.medium",
                "db.t2.large"
            ],
            "ConstraintDescription": "must select a valid database instance type.",
            "Default": "db.m1.small",
            "Description": "Database instance class",
            "Type": "String"
        },
        "DBName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "MetrollaDB",
            "Description": "The database name",
            "MaxLength": "64",
            "MinLength": "1",
            "Type": "String"
        },
        "DBPassword": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters.",
            "Description": "The database admin account password",
            "MaxLength": "41",
            "MinLength": "1",
            "NoEcho": true,
            "Type": "String"
        },
        "DBUser": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Description": "The database admin account username",
            "MaxLength": "16",
            "MinLength": "1",
            "NoEcho": true,
            "Type": "String"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String"
        },
        "Subnets": {
            "Description": "The list of SubnetIds, for at least two Availability Zones in the region in your Virtual Private Cloud (VPC)",
            "Type": "CommaDelimitedList"
        },
        "VpcId": {
            "Description": "VpcId of your existing Virtual Private Cloud (VPC)",
            "Type": "String"
        }
    },
    "Resources": {
        "Ec2Instance": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t3a.medium",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "InstanceSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": "80"
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "InstanceSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable SSH and HTTP access on the inbound port",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "Subnets"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "Subnets"
                        },
                        "FromPort": "8080",
                        "IpProtocol": "tcp",
                        "ToPort": "8080"
                    },
                    {
                        "CidrIp": {
                            "Ref": "Subnets"
                        },
                        "FromPort": "8000",
                        "IpProtocol": "tcp",
                        "ToPort": "8000"
                    },
                    {
                        "CidrIp": {
                            "Ref": "Subnets"
                        },
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "Subnets"
                        },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Range for Inbound cellular devices. limit this range to the number of devices you have",
                        "FromPort": "40000",
                        "IpProtocol": "tcp",
                        "ToPort": "65000"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "MyDB": {
            "Properties": {
                "AllocatedStorage": {
                    "Ref": "DBAllocatedStorage"
                },
                "DBInstanceClass": {
                    "Ref": "DBClass"
                },
                "DBName": {
                    "Ref": "DBName"
                },
                "DBSubnetGroupName": {
                    "Ref": "MyDBSubnetGroup"
                },
                "Engine": "postgres",
                "MasterUserPassword": {
                    "Ref": "DBPassword"
                },
                "MasterUsername": {
                    "Ref": "DBUser"
                },
                "VPCSecurityGroups": [
                    {
                        "Ref": "myVPCSecurityGroup"
                    }
                ]
            },
            "Type": "AWS::RDS::DBInstance"
        },
        "MyDBSubnetGroup": {
            "Properties": {
                "DBSubnetGroupDescription": "Subnets available for the RDS DB Instance",
                "SubnetIds": {
                    "Ref": "Subnets"
                }
            },
            "Type": "AWS::RDS::DBSubnetGroup"
        },
        "S3Bucket": {
            "Properties": {
                "AccessControl": "AuthenticatedRead"
            },
            "Type": "AWS::S3::Bucket"
        },
        "myVPCSecurityGroup": {
            "Properties": {
                "GroupDescription": "Security group for RDS DB Instance.",
                "VpcId": {
                    "Ref": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    }
}